{"version":3,"sources":["bundler/bundler.ts","components/code-editor.tsx","components/preview-window.tsx","components/resizable.tsx","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","components/code-cell.tsx","components/code-app.tsx","components/mobile-view.tsx","App.tsx","index.tsx","../node_modules/prettier sync"],"names":["service","CodeEditor","onChange","innitialValue","editorRef","useRef","className","onClick","unformatted","current","getModel","getValue","formatted","prettier","format","parser","plugins","useTabs","semi","singleQuote","setValue","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","value","theme","width","height","language","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","Preview","code","iframeRef","useEffect","contentWindow","postMessage","ref","srcDoc","sandbox","title","Resizable","direction","children","Infinity","resizeHandles","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","a","getItem","path","cachedResult","axios","get","data","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","bundle","rawCode","esbuild","worker","wasmURL","entryPoints","write","onResolve","namespace","href","define","global","outputFiles","text","CodeCell","useState","input","setInput","setCode","output","style","display","justifyContent","backgroundColor","border","color","CodeApp","textAlign","borderBottom","margin","padding","MobileView","alignItems","App","isWide","useMedia","ReactDOM","render","StrictMode","document","getElementById","webpackEmptyContext","req","e","Error","keys","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.a892d482.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm'\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin'\nimport { fetchPlugin } from './plugins/fetch-plugin'\n\nlet service: esbuild.Service\n\nconst bundle = async (rawCode: string) => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    })\n  }\n  const result = await service.build({\n    entryPoints: ['index.js'],\n    bundle: true,\n    write: false,\n    plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n    define: {\n      'process.env.NODE_ENV': '\"production\"',\n      global: 'window',\n    },\n  })\n  return result.outputFiles[0].text\n}\n\nexport default bundle\n","import React, { useRef } from 'react'\nimport Editor, { EditorDidMount } from '@monaco-editor/react'\n\nimport prettier from 'prettier'\nimport parser from 'prettier/parser-babel'\n\nimport './code-editor-styles.css'\n\n// TS\ninterface CodeEditorProps {\n  innitialValue: string\n  onChange(value: string): void\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, innitialValue }) => {\n  const editorRef = useRef<any>()\n\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor\n    monacoEditor.onDidChangeModelContent(() => {\n      return onChange(getValue())\n    })\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 })\n  }\n\n  const handleClickFormat = () => {\n    const unformatted = editorRef.current.getModel().getValue()\n    const formatted = prettier.format(unformatted, {\n      parser: 'babel',\n      plugins: [parser],\n      useTabs: false,\n      semi: true,\n      singleQuote: true,\n    })\n    editorRef.current.setValue(formatted)\n  }\n\n  return (\n    <div className=\"editor_wrapper\">\n      <button\n        className=\"button button-format is-primary is-small\"\n        onClick={handleClickFormat}\n      >\n        Format\n      </button>\n      <Editor\n        editorDidMount={onEditorDidMount}\n        value={innitialValue}\n        theme=\"dark\"\n        width=\"600px\"\n        height=\"100%\"\n        language=\"javascript\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: true,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 13,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default CodeEditor\n","import React, { useRef, useEffect } from 'react'\nimport './preview-window-styles.css'\n\ninterface IPreviewProps {\n  code: string | undefined\n}\n\nconst html = `\n  <html>\n    <head></head>\n    <body>\n      <div id=\"iframe-root\"></div>\n      <script>\n        window.addEventListener('message', (event)=>{\n          try{\n            eval(event.data)\n          } catch(err){\n            const root = document.querySelector('#iframe-root');\n            root.innerHTML = '<div style=\"color:red\"><h4 style=\"color:red\">Runtime Error:</h4>' + err + '</div>';\n            console.error(err)\n          }\n        }, false)\n      </script>\n    </body>\n  </html>`\n\nconst Preview: React.FC<IPreviewProps> = ({ code }) => {\n  const iframeRef = useRef<any>()\n\n  useEffect(() => {\n    // iframeRef.current.srcdoc = html\n\n    iframeRef.current.contentWindow.postMessage(code, '*')\n  }, [code])\n\n  return (\n    <div className=\"preview_wrapper\">\n      <iframe\n        ref={iframeRef}\n        srcDoc={html}\n        sandbox=\"allow-scripts\"\n        title=\"preview\"\n      />\n    </div>\n  )\n}\n\nexport default Preview\n","import React from 'react'\nimport './resizable-styles.css'\nimport { ResizableBox } from 'react-resizable'\n\ninterface IResizableProps {\n  direction: 'horizontal' | 'vertical'\n}\n\nconst Resizable: React.FC<IResizableProps> = ({ direction, children }) => {\n  return (\n    <ResizableBox height={400} width={Infinity} resizeHandles={['s']}>\n      {children}\n    </ResizableBox>\n  )\n}\n\nexport default Resizable\n","import * as esbuild from 'esbuild-wasm'\nimport axios from 'axios'\nimport localForage from 'localforage'\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n})\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode,\n        }\n      })\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        )\n\n        if (cachedResult) {\n          return cachedResult\n        }\n      })\n\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path)\n        const escaped = data\n          .replace(/\\n/g, '')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\")\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}';\n          document.head.appendChild(style);\n        `\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        }\n        await fileCache.setItem(args.path, result)\n\n        return result\n      })\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path)\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        }\n        await fileCache.setItem(args.path, result)\n\n        return result\n      })\n    },\n  }\n}\n","import * as esbuild from 'esbuild-wasm'\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\n        return { path: 'index.js', namespace: 'a' }\n      })\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\n            .href,\n        }\n      })\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`,\n        }\n      })\n    },\n  }\n}\n","import React, { useState } from 'react'\n\nimport CodeEditor from './code-editor'\nimport Preview from './preview-window'\nimport Resizable from './resizable'\n\nimport bundle from '../bundler/bundler'\n\nconst CodeCell: React.FC = () => {\n  const [input, setInput] = useState('')\n  const [code, setCode] = useState('')\n\n  const onClick = async () => {\n    const output = await bundle(input)\n    setCode(output)\n  }\n\n  const innitialEditorValue = `import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst styles = {\n  title: {\n    textAlign: 'center',\n    fontFamily: 'sans-serif',\n    border: '1px solid black',\n    padding: '20px',\n    color: 'white',\n    backgroundColor: 'coral',\n  },\n  title_app: {\n    textAlign: 'center',\n    fontFamily: 'sans-serif',\n    border: '1px solid black',\n    height: '70vh',\n  },\n  title_p: {\n    textAlign: 'center',\n    fontFamily: 'sans-serif',\n    height: '70vh',\n    padding: '0 10px',\n  },\n};\n\nconst App = () => {\n  return (\n    <div>\n      <p style={styles.title}>Code Editor App</p>\n      <p style={styles.title_app}>\n        <p>App</p>\n        <p style={styles.title_p}>\n          At vero eos et accusamus et iusto odio dignissimos ducimus qui\n          blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\n          et quas molestias excepturi sint occaecati cupiditate non provident,\n          similique sunt in culpa qui officia deserunt mollitia animi, id est\n          laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita\n          distinctio. Nam libero tempore, cum soluta nobis est eligendi optio\n          cumque nihil impedit quo minus id quod maxime placeat facere possimus,\n          omnis voluptas assumenda est, omnis dolor repellendus. Temporibus\n          autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe\n          eveniet ut et voluptates repudiandae sint et molestiae non recusandae.\n          Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis\n          voluptatibus maiores alias consequatur aut perferendis doloribus\n          asperiores repellat.\n        </p>\n      </p>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#iframe-root'));\n\n  `\n  const submit_styles = {\n    backgroundColor: '#3780ec',\n    border: 'none',\n    color: 'white',\n  }\n  return (\n    <Resizable direction=\"vertical\">\n      <section\n        className=\"code_cell_wrapper\"\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          height: '100%',\n        }}\n      >\n        <CodeEditor\n          onChange={(value) => {\n            setInput(value)\n          }}\n          innitialValue={innitialEditorValue}\n        />\n        <button style={submit_styles} onClick={onClick}>\n          Run\n        </button>\n        <Preview code={code} />\n      </section>\n    </Resizable>\n  )\n}\n\nexport default CodeCell\n","import React from 'react'\nimport CodeCell from './code-cell'\n\nconst CodeApp: React.FC = () => {\n  return (\n    <section>\n      <h1\n        style={{\n          color: 'white',\n          textAlign: 'center',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          borderBottom: 'none',\n          margin: '0',\n          padding: '15px 0',\n        }}\n      >\n        Code Editor\n      </h1>\n      <CodeCell />\n    </section>\n  )\n}\n\nexport default CodeApp\n","import React from 'react'\n\nconst MobileView: React.FC = () => {\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <h1 style={{ color: 'white', textAlign: 'center' }}>\n        {' '}\n        🖥️ Please, open on the Desktop 🖥️\n      </h1>\n    </div>\n  )\n}\n\nexport default MobileView\n","import './App.css'\nimport React from 'react'\nimport { useMedia } from 'react-use'\n\nimport CodeApp from './components/code-app'\nimport MobileView from './components/mobile-view'\n\nconst App: React.FC = () => {\n  const isWide = useMedia('(min-width: 1080px)')\n\n  return <div>{isWide ? <CodeApp /> : <MobileView />}</div>\n}\n\nexport default App\n","import './index.css'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 52;"],"sourceRoot":""}